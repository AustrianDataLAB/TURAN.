apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --volumes hostPath -c
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: keycloak
  name: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: keycloak
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --volumes hostPath -c
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/docker-default: "true"
        io.kompose.service: keycloak
    spec:
      containers:
        - args:
            - start
            - --import-realm
          env:
            - name: KC_DB
              value: postgres
            - name: KC_DB_PASSWORD
              value: ${POSTGRES_KEYCLOAK_PASSWORD:?POSTGRES_KEYCLOAK_PASSWORD}
            - name: KC_DB_URL_DATABASE
              value: ${POSTGRES_KEYCLOAK_DB:?POSTGRES_KEYCLOAK_DB}
            - name: KC_DB_URL_HOST
              value: postgres
            - name: KC_DB_URL_PORT
              value: "5432"
            - name: KC_DB_USERNAME
              value: ${POSTGRES_KEYCLOAK_USER:?POSTGRES_KEYCLOAK_USER}
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_HOSTNAME
              value: ${KEYCLOAK_HOSTNAME:?KEYCLOAK_HOSTNAME}
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_PROXY
              value: edge
            - name: KEYCLOAK_ADMIN
              value: admin
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: ${KEYCLOAK_ADMIN_PASSWORD:?KEYCLOAK_ADMIN_PASSWORD}
            - name: KEYCLOAK_LOGLEVEL
              value: DEBUG
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
          image: keycloak/keycloak:${KEYCLOAK_VERSION:?KEYCLOAK_VERSION}
          name: keycloak
          ports:
            - containerPort: 8080
          resources: {}
          volumeMounts:
            - mountPath: /opt/keycloak/data/import
              name: keycloak-hostpath0
              readOnly: true
      restartPolicy: Always
      volumes:
        - hostPath:
            path: /Users/melho/TU/SEM2/HOCN/TURAN./docker/keycloak/import
          name: keycloak-hostpath0
status: {}
